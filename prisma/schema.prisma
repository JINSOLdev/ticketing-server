generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model events {
  id           Int            @id @default(autoincrement())
  title        String         @db.VarChar(255)
  start_time   DateTime       @db.Timestamp(6)
  end_time     DateTime       @db.Timestamp(6)
  created_at   DateTime?      @default(now()) @db.Timestamp(6)
  reservations reservations[]
  seats        seats[]
}

model reservation_seats {
  reservation_id Int
  seat_id        Int
  reservations   reservations @relation(fields: [reservation_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  seats          seats        @relation(fields: [seat_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([reservation_id, seat_id])
}

model reservations {
  id                Int                 @id @default(autoincrement())
  user_id           Int?
  event_id          Int?
  reserved_at       DateTime?           @default(now()) @db.Timestamp(6)
  reservation_seats reservation_seats[]
  events            events?             @relation(fields: [event_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users             users?              @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model seats {
  id                Int                 @id @default(autoincrement())
  event_id          Int?
  seat_number       String              @db.VarChar(10)
  status            seat_status?        @default(available)
  reservation_seats reservation_seats[]
  events            events?             @relation(fields: [event_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([event_id, seat_number])
}

model users {
  id           Int            @id @default(autoincrement())
  email        String         @unique @db.VarChar(255)
  created_at   DateTime?      @default(now()) @db.Timestamp(6)
  reservations reservations[]
}

enum seat_status {
  available
  reserved
  sold
}
